openapi: 3.0.0
info:
  title: Triveous
  version: 1.0.0
  description: API for an online shopping platform

servers:
  - url: http://localhost:9000/
    description: Development server

paths:
  /signUp:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user.
                email:
                  type: string
                  format: email
                  description: The email address of the user.
                password:
                  type: string
                  description: The password of the user.
                role:
                  type: string
                  enum: ["seller", "customer"]
                  description: The role of the user (seller or customer). Default is "customer".
      responses:
        '201':
          description: User successfully registered.
        '200':
          description: User already exists.
        '400':
          description: Bad Request.
        '500':
          description: Internal Server Error.



  /addProduct:
    post:
      summary: Add a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the product.
                description:
                  type: string
                  description: The description of the product.
                price:
                  type: number
                  description: The price of the product.
                availability:
                  type: boolean
                  description: The availability status of the product.
                category:
                  type: string
                  enum: ["Clothes", "Shoes", "Electronics"]
                  description: The category of the product.
              required:
                - title
                - description
                - price
                - availability
                - category
      responses:
        '201':
          description: Product added successfully.
        '401':
          description: Unauthorized. User not authenticated or invalid token.
        '403':
          description: Forbidden. User is not authorized to add products.
        '500':
          description: Internal Server Error.

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The email address of the user.
                password:
                  type: string
                  description: The password of the user.
              required:
                - email
                - password
      responses:
        '200':
          description: User login successful.
        '401':
          description: User not found or invalid credentials.
        '500':
          description: Internal Server Error.

  /getProductsById/{categoryId}:
    get:
      summary: Get products by category ID
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK

  /addToCart:
    post:
      summary: Add a product to the cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user.
                productId:
                  type: string
                  description: The ID of the product to add to the cart.
      responses:
        '201':
          description: Product added to cart successfully.
        '400':
          description: Bad Request. Product ID is required.
        '404':
          description: Not Found. Product not found.
        '500':
          description: Internal Server Error.

  /getCart:
    get:
      summary: Get user's cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found. Cart not found.
        '500':
          description: Internal Server Error.

  /updateCartProductQuantity/{productId}:
    patch:
      summary: Update quantity of a product in the cart
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: quantity
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Cart item updated successfully.
        '400':
          description: Bad Request. Product ID and a valid quantity are required.
        '404':
          description: Not Found. Cart or product not found in the cart.
        '500':
          description: Internal Server Error.

  /removeCartItem/{productId}:
    delete:
      summary: Remove a product from the cart
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart item removed successfully.
        '400':
          description: Bad Request. Product ID is required.
        '404':
          description: Not Found. Cart or product not found in the cart.
        '500':
          description: Internal Server Error.

  /placeOrder:
    post:
      summary: Place a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user placing the order.
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        description: The ID of the product to add to the order.
                      quantity:
                        type: integer
                        description: The quantity of the product in the order.
              required:
                - userId
                - products
      responses:
        '201':
          description: Order placed successfully.
        '400':
          description: Bad Request. User ID and products are required.
        '404':
          description: Not Found. Product not found or cart is empty.
        '500':
          description: Internal Server Error.

  /getOrderHistory:
    get:
      summary: Get order history for a user
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized. User not authenticated or invalid token.
        '500':
          description: Internal Server Error.

  /getOrderDetails/{orderId}:
    get:
      summary: Get order details by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized. User not authenticated or invalid token.
        '404':
          description: Not Found. Order not found.
        '500':
          description: Internal Server Error.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
